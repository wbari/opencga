!define TEST_SYSTEM {slim}
!3 Generate Random Variables
!| Table: Rest Fixture | $baseURL |
| let | familyId1 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | familyName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | familyName2 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | fatherName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | motherName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | updatedName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | iName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | asName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | asName2 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | aS1 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | aS2 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |

!3 Login User A
!| Table: Rest Fixture | $baseURL |
| setBody | {"password" : "p@ssword"} |
| POST | /v1/users/$userA/login | 200 | Content-Type: application/json | |
| let | sessionIdUserA | js | response.jsonbody.response[0].result[0].sessionId | |

!3 Create Individual
!| Table: Rest Fixture | $baseURL |
| setBody | {"id" : "$iName" } |
| POST | /v1/individuals/create?sid=$sessionIdUserA&study=$study | 200 | Content-Type: application/json | |
| let | individualId | js | response.jsonbody.response[0].result[0].id | |

!3 Create First Family
!| Table: Rest Fixture | $baseURL |
| setBody | { "id" : "$familyId1", "name": "$familyName",  "members": [{"name": "father"}, {"name": "mother"},{"name": "son","father" : "father","mother" : "mother"}]} |
| POST | /v1/families/create?study=$study | 200 | Content-Type: application/json | |
| let | familyId | js | response.jsonbody.response[0].result[0].id | |

!3 Search Father
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?study=$study&name=father | 200 | Content-Type: application/json | |
| let | fatherId | js | response.jsonbody.response[0].result[0].id | |

!3 Search Mother
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?study=$study&name=mother | 200 | Content-Type: application/json | |
| let | motherId | js | response.jsonbody.response[0].result[0].id | |

!3 Search Son
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?study=$study&name=son | 200 | Content-Type: application/json | |
| let | sonId | js | response.jsonbody.response[0].result[0].id | |

!3 Create Dummy Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name": "dummyFamilyName",  "members": [{"name": "father"}, {"name": "mother"},{"name": "son"}]} |
| POST | /v1/families/create?study=$study | 200 | Content-Type: application/json | |
| let | dummyFamilyId | js | response.jsonbody.response[0].result[0].id | |

!3 Get Project Release
!| Table: Rest Fixture | $baseURL |
| GET | /v1/projects/$projectId/info | 200 | Content-Type: application/json | |
| let | releaseNumber | js | response.jsonbody.response[0].result[0].currentRelease | |

!3 Increment Project Release
!| Table: Rest Fixture | $baseURL |
| POST | /v1/projects/$projectId/incRelease | 200 | Content-Type: application/json | jsonbody.response[0].result[0] > "$releaseNumber" |
| let | currentRelease | js | $releaseNumber + 1 | |

!3 Create Second Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name": "$familyName2",  "members": [{"name": "father"}, {"name": "mother"},{"name": "son","father" : "father","mother" : "mother"}]} |
| POST | /v1/families/create?sid=$sessionIdUserA&study=$study | 200 | Content-Type: application/json | |
| let | familyId2 | js | response.jsonbody.response[0].result[0].id | |

!3 Get First Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| setHeader | Authorization : Bearer |
| GET | /v1/families/$familyId/info | 403 | Content-Type: application/json | jsonbody.error != '' |

!3 Create VIEW_FAMILIES ACL For Study
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions" : "VIEW_FAMILIES",  "action": "SET",  "study": "$studyId"} |
| POST | /v1/studies/acl/*/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW_FAMILIES' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| setHeader | Authorization : Bearer |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error === ''  && jsonbody.response[0].result[0].id == '$familyId' |

!3 Delete VIEW_FAMILIES ACL For Study
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions" : "VIEW_FAMILIES",  "action": "REMOVE",  "study": "$studyId"} |
| POST | /v1/studies/acl/*/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].permissions.length == '0.0' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| setHeader | Authorization : Bearer |
| GET | /v1/families/$familyId/info | 403 | Content-Type: application/json | jsonbody.error != '' |

!3 Create Family ACL For Anonymous
!| Table: Rest Fixture | $baseURL |
| setBody | {"permissions": "VIEW", "action":"SET", "family": "$familyId"} |
| POST | /v1/families/acl/*/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| setHeader | Authorization : Bearer |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error === ''  && jsonbody.response[0].result[0].id == '$familyId' |

!3 Delete Family ACL For Anonymous
!| Table: Rest Fixture | $baseURL |
| setBody | { "action":"RESET", "family": "$familyId"} |
| POST | /v1/families/acl/*/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0.0' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| setHeader | Authorization : Bearer |
| GET | /v1/families/$familyId/info | 403 | Content-Type: application/json | jsonbody.error != '' |

!3 Get Two Families
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2/info | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' && jsonbody.response[1].result[0].id == '$familyId2' |

!3 Get Two Families in Reverse Order
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2,$familyId/info | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId2' && jsonbody.response[1].result[0].id == '$familyId' |

!3 Get Multiple Families With One Invalid Entry
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2,000/info | 500 | Content-Type: application/json | |

!3 Get Multiple Families With One Invalid Entry And Silent True
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2,000/info?silent=true | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' && jsonbody.response[1].result[0].id == '$familyId2' &&  jsonbody.response[2].errorMsg == "org.opencb.opencga.catalog.exceptions.CatalogException: Family 000 not found" |

!3 Update First Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$updatedName"} |
| POST | /v1/families/$familyId/update?study=$study | 200 | Content-Type: application/json | |

!3 Get First Family After Update
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' && jsonbody.response[0].result[0].name == '$updatedName' |

!3 Search First Family By Name
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&name=$updatedName | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' |

## This is removed because GEL wanted a soft policy
#this test should fail as the individual has not proper mother and father to get eligible to be part of this family

#!3 (Neagtive) Update Second Family
#!| Table: Rest Fixture | $baseURL |
#| setBody | {"members": [{"name": "father"},{"name": "mother"},{"name": "son"},{"name":"$iName"}]} |
#| setHeader | Content-Type:application/json |
#| POST | /v1/families/$familyId2/update?study=$study | 500 | Content-Type: application/json | |

!3 Update Individual
!| Table: Rest Fixture | $baseURL |
| setBody | { "father" : "father", "mother" :"mother"} |
| POST | /v1/individuals/$individualId/update |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].father.id == "$fatherId" && jsonbody.response[0].result[0].mother.id == "$motherId"|

!3 Update Second Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"members": [{"name": "father"},{"name": "mother"},{"name": "son"},{"name":"$iName"}]} |
| POST | /v1/families/$familyId2/update?study=$study | 200 | Content-Type: application/json | |

!3 Search Second Family By Name After Update
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&name=$familyName2 | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId2' && jsonbody.response[0].result[0].members.length == '4' |

!3 Get First Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0.0' |

!3 Update (Create) First Family ACL (SET)
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "VIEW",  "action": "SET",  "family": "$familyId"} |
| POST | /v1/families/acl/$userA/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions[0] == 'VIEW' |

!3 Update First Family ACL (ADD)
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "DELETE",  "action": "ADD",  "family": "$familyId"} |
| POST | /v1/families/acl/$userA/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '2.0' |

!3 Update First Family ACL (REMOVE)
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "DELETE",  "action": "REMOVE",  "family": "$familyId"} |
| POST | /v1/families/acl/$userA/update | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '1.0' |

!3 Get Member ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?member=$userA | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions[0] == 'VIEW' |

!3 Get First Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '1.0' |

!3 Get Second Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2/acl | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0.0' |

!3 Get Two Families ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2/acl?study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].id == '$familyId' && jsonbody.response[1].id == '$familyId2' |

!3 Get Two Families ACL In Reverse
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2,$familyId/acl?study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].id == '$familyId2' && jsonbody.response[1].id == '$familyId' |

!3 Get Multiple Families ACL With One Invalid Entry
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2,000/acl?study=$study | 500 | Content-Type: application/json | |

!3 Get Multiple Families ACL With One Invalid Entry With Silent True
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,000,$familyId2/acl?study=$study&silent=true | 200 | Content-Type: application/json | |

!3 Search All Families
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length > '0.0' |

!3 (Negative) Get Non-Existing Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/5425/info | 500 | Content-Type: application/json | jsonbody.error == 'Family 5425 not found' |

!3 (Negative) Get Non-Existing Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/dysjk/acl | 500 | Content-Type: application/json | jsonbody.error == 'Family dysjk not found' |

# Deprecated annotation web services will be removed keeping them for legacy checks

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | {  "name": "$asName",  "annotations": {"var_int": "10"}} |
| POST | /v1/families/$familyId/annotationsets/create?variableSetId=$gVariableSetId&study=$studyId | 200 | Content-Type : application/json | jsonbody.response[0].result.length == 1 && jsonbody.response[0].result[0].annotations["var_int"] == '10' &&  jsonbody.response[0].result[0].annotations["var_double"] == '20.5' |
| let | annotationSetName | js | response.jsonbody.response[0].result[0].name | |

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets": [ {   "name": "string",          "variableSetId": "$gVariableSetId",          "annotations": {"var_int": "20"} } ]} |
| POST | /v1/families/$familyId/update?study=$studyId | 200 | Content-Type : application/json | |

# fails as opencga no longer supports name
!3 (Negative) Create Annotation Set Using Variable Set Name 
!| Table: Rest Fixture | $baseURL |
| setBody | {  "id": "$asName2",  "annotations": {"var_int": "50"}} |
| POST | /v1/families/$familyId/annotationsets/create?variableSet=$gvsName&study=$studyId |500| Content-Type : application/json | |
#| POST | /v1/families/$familyId/annotationsets/create?variableSet=$gvsName&study=$studyId | 200 | Content-Type : application/json | jsonbody.response[0].result.length == 1 && jsonbody.response[0].result[0].annotations["var_int"] == '50' &&  jsonbody.response[0].result[0].annotations["var_double"] == '20.5' |


!3 (Negative) Create Annotation Set with Invalid Data Type
!| Table: Rest Fixture | $baseURL |
| setBody | {  "name": "dummyName",  "annotations": {"var_int": "TRUE"}} |
| POST | /v1/families/$familyId/annotationsets/create?variableSetId=$gVariableSetId&study=$studyId | 500 | Content-Type : application/json | jsonbody.error == 'Value TRUE is not an integer number' |

!3 Get Annotation Set
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/?name=$annotationSetName | 200 | Content-Type: application/json | jsonbody.response[0].result[0].name == '$annotationSetName' |

!3 Search Annotation Set
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?variableSet=$gVariableSetId | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '2' |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?variableSet=$gVariableSetId&annotation=var_int=9 | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '0' |
| GET | /v1/families/$familyId/annotationsets/search?variableSet=$gVariableSetId&annotation=var_int=10 | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '2' |
| GET | /v1/families/$familyId/annotationsets/search?variableSet=$gVariableSetId&annotation=var_int=20.5 | 500 | Content-Type: application/json | jsonbody.response[0].error != '' |

!3 Update Annotation Set 
!| Table: Rest Fixture | $baseURL |
| setBody | {"var_double": "100.50"} |
| POST | /v1/families/$familyId/annotationSets/$annotationSetName/annotations/update?study=$studyId&action=ADD | 200 | Content-Type : application/json | |

# https://github.com/opencb/opencga/commit/41d44fe94d86d3b94a419ebe6d7ba951469acd27

!3 Apply Empty Update On Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | {} |
| POST | /v1/families/$familyId/annotationSets/$annotationSetName/annotations/update?study=$studyId&action=ADD | 200 | Content-Type : application/json | |

!3 Get First Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json ||

!3 Delete Annotation Set Using Update 
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets":[ {"id" : "$asName"}, {"id" : "string"}]}|
| POST | /v1/families/$familyId/update?study=$studyId&annotationSetsAction=REMOVE | 200 | Content-Type : application/json | |

!3 (Negative) Delete Non-Existing Annotation Set Using Update 
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets":[ {"id" : "string"}]}|
| POST | /v1/families/$familyId/update?study=$studyId&annotationSetsAction=REMOVE | 500 | Content-Type : application/json | |


!3 Search Annotation Set After Delete
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?variableSet=$gVariableSetId&annotation=annotationSet=$asName&name=$updatedName | | Content-Type: application/json | jsonbody.response[0].result.length == 0|

#################### new annotation

!3 Create Annotation Set  
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets": [ {   "name": "$aS1","variableSetId": "$gVariableSetId", "annotations": {"var_int": "10", "var_double": "175.58"} } ]} |
| POST | /v1/families/$familyId/update?study=$studyId | 200 | Content-Type : application/json | |

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets": [ {   "name": "$aS1", "variableSetId": "$gVariableSetId", "annotations": {"var_int": "10", "var_double": "175.58"} } ]} |
| POST | /v1/families/$familyId2/update?study=$studyId | 200 | Content-Type : application/json | |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?variableSet=$gVariableSetId&annotation=var_int=10 | 200 | Content-Type: application/json | |

!3 Create Nested Annotation 
!| Table: Rest Fixture | $baseURL |
| setBody | {  "annotationSets": [{"name": "$aS2", "variableSetId": "$gVariableSetId2", "annotations": { "outer_var" : [{"inner_first_var":1000.57 , "inner_second_var":2000}]}}]} |
| POST | /v1/families/$familyId1/update | 200 | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 2 |

!3 Search Annotation Set By Variable Set 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study | | Content-Type: application/json | |
| GET | /v1/families/search?study=$study&annotation=variableSet=$gVariableSetId | | Content-Type: application/json | jsonbody.response[0].numTotalResults == 2 |
| GET | /v1/families/search?study=$study&annotation=variableSet===$gVariableSetId | | Content-Type: application/json | jsonbody.response[0].result[0].id == "$familyId2" |
| GET | /v1/families/search?study=$study&annotation=variableSet===$gVariableSetId | | Content-Type: application/json | |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&annotation=annotationSet=$aS1 | | Content-Type: application/json |  jsonbody.response[0].numTotalResults == '2' |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&annotation=annotationSet=$aS2 | | Content-Type: application/json | jsonbody.response[0].numTotalResults == '1' |


!3 Search Annotation Set By Annotation With Exclude
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&annotation=annotationSet=$aS1&exclude=annotationSet.$aS2 | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 1 && jsonbody.response[0].result[0].annotationSets[0].name == "$aS1" |

!3 Update Variable in An Annotation 
!|Table: Rest Fixture | $baseURL |
| setBody | {"var_int": "545"}|
| POST | /v1/families/$familyId/annotationSets/$aS1/annotations/update?study=$studyId |200|  Content-Type: application/json ||

!3 (Negative) Update Variable in An Annotation
!|Table: Rest Fixture | $baseURL |
| setBody | {"var_int": "542.5"}|
| POST | /v1/families/$familyId/annotationSets/$aS1/annotations/update?study=$studyId |500|  Content-Type: application/json |jsonbody.error == 'Value 542.5 is not an integer number'|

!3 (Negative) Update Variable in An Annotation
!|Table: Rest Fixture | $baseURL |
| setBody |{"var_double": "ABC"}|
| POST | /v1/families/$familyId/annotationSets/$aS1/annotations/update?study=$studyId |500|  Content-Type: application/json |jsonbody.error == 'Value ABC is not a number'|

!3 Update Variable in An Annotation
!|Table: Rest Fixture | $baseURL |
| setBody | {"var_double": "2065.35"}|
| POST | /v1/families/$familyId/annotationSets/$aS1/annotations/update?study=$studyId |200|  Content-Type: application/json ||

!3 (Negative) Delete Variable In Annotation 
!| Table: Rest Fixture | $baseURL |
| setBody |{"remove" : "var_int"}|
| POST | /v1/families/$familyId/annotationSets/$aS1/annotations/update?study=$studyId&action=REMOVE | 500 | Content-Type: application/json |jsonbody.error == 'var_int: Cannot remove required variable.'|

!3 Delete Variable In Annotation 
!| Table: Rest Fixture | $baseURL |
| setBody |{"remove" : "var_double"}|
| POST | /v1/families/$familyId/annotationSets/$aS1/annotations/update?study=$studyId&action=REMOVE | 200 | Content-Type: application/json ||

!3 Delete Annotation 
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets":[{"id": "$aS1"}]} |
| POST | /v1/families/$familyId/update?annotationSetsAction=REMOVE | 200 | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets[0].name == "$aS2" |

!3 Get Flatten Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&annotation=annotationSet=$aS2&flattenAnnotations=true | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var.inner_second_var"][0] == 2000 && jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var.inner_first_var"][0] == 1000.57 |

!3 Get Standard Annotation (Not Flatten)
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&annotation=annotationSet=$aS2&flattenAnnotations=false | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var"][0]["inner_first_var"] == 1000.57  && jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var"][0]["inner_second_var"] == 2000 |


################

#       --------------------

#      | Release1 |Release2 |

#      |--------------------|

#      |  Fa1,I1  |         |Snapshot1

#      |--------------------|

#      | Fa2      |Fb1      |Snapshot2

#      |          |         |

#       --------------------

!3 Get First Snap Shot
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&snapshot=$releaseNumber | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='2' |

!3 Get Snap Shot 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&snapshot=$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='3' |

!3 Get Release 1
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&release=$releaseNumber | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='2' |

!3 Get Release 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&release=$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id  =='$familyId2' && jsonbody.response[0].result.length == '1'  && jsonbody.response[0].result[0].version =='1' |

!3 Get Release > 1
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&release=%3E$releaseNumber | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id  =='$familyId2' && jsonbody.response[0].result.length == '1'  && jsonbody.response[0].result[0].version =='1' |

!3 Get Release > 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&release=%3E$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='0' |

!3 Get Release < 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?study=$study&release=%3C$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='2' |

!3 Delete Individual 
!| Table: Rest Fixture | $baseURL |
| DELETE | /v1/individuals/delete?study=$study&id=$individualId&force=true | 200 | Content-Type: application/json | |

!3 Delete Father Without Force 
!| Table: Rest Fixture | $baseURL |
| DELETE | /v1/individuals/delete?study=$study&id=$fatherId | 200 | Content-Type: application/json |  |

!3 Delete Father
!| Table: Rest Fixture | $baseURL |
| DELETE | /v1/individuals/delete?study=$study&id=$fatherId&force=true |200| Content-Type: application/json |  |

!3 Delete Son
!| Table: Rest Fixture | $baseURL |
| DELETE | /v1/individuals/delete?study=$study&id=$sonId&force=true | 200 | Content-Type: application/json ||

!3 Delete Mother
!| Table: Rest Fixture | $baseURL |
| DELETE | /v1/individuals/delete?study=$study&id=$motherId&force=true | 200 | Content-Type: application/json | |

#update this after delete fun is properly implemented.

!3 Get First Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].members.length == '0' |

!3 Search Deleted Individual 
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?study=$study&name=$individualId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0' |
